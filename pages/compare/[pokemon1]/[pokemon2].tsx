import { useMemo, useRef, useCallback, useEffect, useState } from 'react';
import type { NextPage } from 'next'
import Head from 'next/head'
import { useQuery } from "@apollo/client";
import Image from 'next/image';
import { useRouter } from "next/router";
import POKEMON_COMPARABLE from '../../../graphql/query/getPokemonComparable';
import styles from '../../../styles/Comparable.module.css';
import Skeleton from 'react-loading-skeleton'


const ComparablePage: NextPage = () => {
  const router = useRouter();
  const { pokemon1, pokemon2 } = router.query;

  const { data, loading } = useQuery(POKEMON_COMPARABLE, {
    skip: !pokemon1 || !pokemon2,
    variables: { name1: pokemon1, name2: pokemon2 }
  })

  const pokemonData1 = useMemo(() => {
    if (!data) return null;
    return data?.pokemon1[0];
  }, [data])

  const pokemonData2 = useMemo(() => {
    if (!data) return null;
    return data?.pokemon2[0];
  }, [data])

  const mergedStat = useMemo(() => {
    const pokemon1 = data?.pokemon1[0];
    const pokemon2 = data?.pokemon2[0];
    if (!pokemon1 || !pokemon2) return [];
    return pokemonData1?.pokemonDetail?.[0]?.stats?.map((el: any, idx: number) => ({
      stat: { ...el?.stat },
      baseStat1: el?.base_stat,
      baseStat2: pokemonData2?.pokemonDetail?.[0]?.stats?.[idx]?.base_stat,
    }));
  }, [data])

  if (loading) return <Skeleton count={3}></Skeleton>
  return (
    <div className={styles.container}>
      <Head>
        <title>Pok√©dex - {pokemon1} vs ${pokemon2}</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
        <div className={styles.grid}>
          <div>
            <p><strong>#{pokemonData1?.id}</strong></p>
            <h1 className={styles.title}>{pokemonData1?.name}</h1>
            <div className={styles.imageContainer}>
              <Image
                alt={`pokemon-${pokemonData1?.id}`}
                src={`https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/official-artwork/${pokemonData1?.id}.png`}
                width={82}
                height={82}
                className={styles.pokemonImage}
              />
            </div>
          </div>
          <div>
            <p><strong>#{pokemonData2?.id}</strong></p>
            <h1 className={styles.title}>{pokemonData2?.name}</h1>
            <div className={styles.imageContainer}>
              <Image
                alt={`pokemon-${pokemonData2?.id}`}
                src={`https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/official-artwork/${pokemonData2?.id}.png`}
                width={82}
                height={82}
                className={styles.pokemonImage}
              />
            </div>
          </div>
        </div>
        <section className={styles.section}>
          <h2 className={styles.title}>About</h2>
          <div className={styles.stat}>
            <p className={styles.label}>Height</p>
            <p className={styles.val}>{`${pokemonData1?.pokemonDetail?.[0]?.height / 10} m`}</p>
            <p className={styles.val}>{`${pokemonData2?.pokemonDetail?.[0]?.height / 10} m`}</p>
          </div>
          <div className={styles.stat}>
            <p className={styles.label}>Weight</p>
            <p className={styles.val}>{`${pokemonData1?.pokemonDetail?.[0]?.weight / 10} Kg`}</p>
            <p className={styles.val}>{`${pokemonData2?.pokemonDetail?.[0]?.weight / 10} Kg`}</p>
          </div>
        </section>
        <section className={styles.section}>
          <h2 className={styles.title}>Base Stats</h2>
          {
            mergedStat?.map((el: any, idx: number) =>
              <div className={styles.stat} key={`stat-${idx}`}>
                <p className={styles.label}>{el?.stat?.name}</p>
                <p className={styles.val}>
                  {el?.baseStat1}
                </p>
                <p className={styles.val}>
                  {el?.baseStat2}
                </p>
              </div>
            )
          }
        </section>
      </main>
    </div>
  );
}

export default ComparablePage;